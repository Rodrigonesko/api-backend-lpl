const express = require('express')
const publicController = require('../controllers/publicController')
const userController = require('../controllers/userController')
const verifyToken = require('../middlewares/verifyToken')
const auth = require('../middlewares/auth')
const rnContoller = require('../controllers/rnContoller')
const horarioController = require('../controllers/horarioController')
const rsdController = require('../controllers/rsdController')
const elegibilidadeController = require('../controllers/elegibilidadeController')
const TeleEntrevistaController = require('../controllers/TeleEntrevistaController')
const urgenciaEmergenciaController = require('../controllers/urgenciaEmergenciaController')
const ControleAtividadeController = require('../controllers/controleAtividadesController')

const router = express.Router()

const multer = require('multer')
const amilController = require('../controllers/amilController')


const uploadRsd = multer({ dest: '/tmp' })

//Public routes
router.get('/', publicController.index)
router.post('/login', publicController.login)
router.post('/logout', publicController.logout)

//Verificar Token
router.get('/verifyToken', auth, verifyToken.verify)

//User
router.post('/users', auth, userController.create)
router.get('/users', auth, userController.index)
router.get('/infoUser', auth, userController.infoUser)
router.get('/infoUser/:email', auth, userController.searchEmail)
router.get('/users/enfermeiros', auth, userController.enfermeiros)
router.put('/users/updatePassword', auth, userController.firstAccess)
router.put('/users/modules', auth, userController.modules)
router.get('/users/elegibilidade', auth, userController.analistasElegi)
router.put('/users/resetPassword', auth, userController.resetPassword)

//Rns

router.post('/rn/upload', auth, rnContoller.upload)
router.get('/rn/rns', auth, rnContoller.show)
router.get('/rn/rns/:id', auth, rnContoller.search)
router.get('/rn/pedido/:proposta', auth, rnContoller.searchProposta)
router.get('/rn/report', auth, rnContoller.report)
router.put('/rn/rns/update', auth, rnContoller.update)
router.put('/rn/rns/concluir', auth, rnContoller.concluir)
router.put('/rn/updateConfirmadas', auth, rnContoller.updateConfirmadas)
router.get('/rn/naoAgendadas', rnContoller.naoAgendadas)
router.get('/rn/agendadas', rnContoller.agendadas)
router.delete('/rn/delete/:id', auth, rnContoller.excluirProposta)
router.put('/rn/reagendar', auth, rnContoller.reagendar)
router.put('/rn/alterarTelefone', auth, rnContoller.alterarTelefone)
router.get('/rn/concluidas', auth, rnContoller.concluidas)
router.put('/rn/cancelar', auth, rnContoller.cancelar)
router.put('/rn/tentativaContato', auth, rnContoller.tentativaContato)

//Tele Entrevistas

router.post('/entrevistas/gerarHorarios', auth, horarioController.gerar)
router.get('/entrevistas/buscarDiasDisponiveis/:enfermeiro', auth, horarioController.search)
router.get('/entrevistas/buscarHorariosDisponiveis/:enfermeiro/:data', auth, horarioController.searchHorarios)
router.get('/entrevistas/buscarHorariosNaoDisponiveis/:responsavel/:data', auth, horarioController.buscarHorariosNaoDisponiveis)
router.put('/entrevistas/agendar', auth, horarioController.agendar)
router.put('/entrevistas/fecharDia', auth, horarioController.fecharDia)
router.put('/entrevistas/fecharHorarios', auth, horarioController.fecharHorarios)
router.put('/entrevistas/reabrirHorarios', auth, horarioController.reabrirHorarios)
router.get('/entrevistas/horarios/disponiveis', auth, horarioController.buscarHorarioDisponiveis)

router.get('/entrevistas/perguntas', auth, TeleEntrevistaController.mostrarPerguntas)
router.post('/entrevistas/formulario', auth, TeleEntrevistaController.enviarDadosFormulario)
router.get('/entrevistas/cids/pesquisa/:pesquisa', auth, TeleEntrevistaController.buscarCids)
router.get('/entrevistas/dadosEntrevista/:proposta/:nome', auth, TeleEntrevistaController.mostrarDadosEntrevista)
router.get('/entrevistas/dadosEntrevista', auth, TeleEntrevistaController.mostrarDadosEntrevistas)
router.get('/entrevistas/buscar/dadosEntrevista/:id', auth, TeleEntrevistaController.mostrarDadosEntrevistaId)
router.put('/entrevistas/editar/dadosEntrevista', auth, TeleEntrevistaController.salvarDadosEditados)
router.get('/entrevistas/propostas/anexar', auth, TeleEntrevistaController.buscarPropostasNaoAnexadas)
router.put('/entrevistas/propostas/anexar', auth, TeleEntrevistaController.anexarSisAmil)
router.put('/entrevistas/reagendar', auth, TeleEntrevistaController.reagendar)
router.put('/entrevistas/cancelar', auth, TeleEntrevistaController.cancelarProposta)
router.get('/entrevistas/naoFaturadas', auth, TeleEntrevistaController.buscarNaoFaturados)
router.put('/entrevistas/faturar', auth, TeleEntrevistaController.realizarFaturamento)
router.get('/entrevistas/faturamento/filtros/:status/:data', auth, TeleEntrevistaController.filtrosFaturamento)
router.post('/entrevistas/upload/perguntas', auth, TeleEntrevistaController.subirPerguntas)
router.get('/entrevistas/report/agendadas', auth, TeleEntrevistaController.reportAgendadas)
router.put('/entrevistas/propostas/vigencia/update', auth, TeleEntrevistaController.atualizarVigencia)
router.get('/entrevistas/producao/diaria/:data', auth, TeleEntrevistaController.producaoDiaria)
router.post('/entrevistas/cid/adicionar', auth, TeleEntrevistaController.adicionarCid)
router.get('/entrevistas/mensagens/:data', TeleEntrevistaController.gerarMensagens)
router.post('/entrevistas/horario/novo', auth, horarioController.abrirNovoHorario)
router.put('/entrevistas/dadosEntrevista/dataNascimento', auth, TeleEntrevistaController.alterarDataNascimento)
router.get('/entrevistas/realizadas/:pesquisa', auth, TeleEntrevistaController.buscarEntrevistaRealizada)
router.put('/entrevistas/realizadas/alterarSexo', auth, TeleEntrevistaController.alterarSexoEntrevistaRealizada)
router.put('/entrevistas/mandarImplatacao', auth, TeleEntrevistaController.mandarImplantacao)
router.put('/entrevistas/implantar', auth, TeleEntrevistaController.implantar)
router.get('/entrevistas/naoImplantadas', auth, TeleEntrevistaController.naoImplantadas)
router.put('/entrevistas/voltar', auth, TeleEntrevistaController.voltarEntrevista)

router.get('/entrevistas/diasDisponiveis', auth, horarioController.diasDisponiveis)
router.get('/entrevistas/horariosDisponiveis/:data', horarioController.buscarHorariosDisponiveis)
router.get('/entrevistas/analistasDisponiveis/:data/:horario', auth, horarioController.buscarAnalistasDisponiveis)

router.get('/migrarBanco', TeleEntrevistaController.migrarBanco)
router.get('/entrevistas/teste/producao', TeleEntrevistaController.mostrarDadosProducao2)

//RSD

router.get('/rsd/atualizarProdutos', rsdController.atulizarProdutos)

router.post('/rsd/upload', auth, rsdController.upload)
router.post('/rsd/uploadQuarentena', auth, rsdController.uploadQuarentena)
router.post('/rsd/subir', auth, rsdController.subir)
router.get('/rsd/pedidos/todos', auth, rsdController.show)
router.get('/rsd/pessoas/:mo', auth, rsdController.mostrarPessoa)
router.put('/rsd/pessoas/editar', auth, rsdController.atualizarInformacoes)
router.get('/rsd/pedido/:pedido', auth, rsdController.buscarPedido)
router.put('/rsd/clinica/busca', auth, rsdController.buscarClinica)
router.put('/rsd/pedido/editar', auth, rsdController.editarPedido)
router.post('/rsd/pedido/criar', auth, rsdController.criarPedido)
router.get('/rsd/mo/:protocolo', auth, rsdController.buscarMoProtocolo)
router.post('/rsd/protocolo/criar', auth, rsdController.criarProtocolo)
router.post('/rsd/pacote/criar', auth, rsdController.criarPacote)
router.get('/rsd/pedidos/mo/:mo', auth, rsdController.buscarPedidosMo)
router.put('/rsd/pacote/assumir', auth, rsdController.assumirPacote)
router.get('/rsd/pedidos/pacote/:pacote', auth, rsdController.buscarPedidosPacote)
router.post('/rsd/gravacao/anexar/:pacote', auth, rsdController.anexarGravacao)
router.get('/rsd/arquivos/:pacote', auth, rsdController.buscarArquivos)
router.get('/rsd/formasPagamento', auth, rsdController.buscarFormasPagamento)
router.get('/rsd/statusFinalizacoes', auth, rsdController.buscarStatusFinalizacao)
router.put('/rsd/pedido/atualizar', auth, rsdController.atualizarPedido)
router.get('/rsd/agenda/:pacote', auth, rsdController.buscarAgenda)
router.get('/rsd/pedidos/naoFinalizados/naoFinalizados', auth, rsdController.buscarPedidosNaoFinalizados)
router.get('/rsd/pedidos/naoFinalizados/filtro/:pesquisa', auth, rsdController.filtroPedidosNaoFinalizados)
router.get('/rsd/operadoras', auth, rsdController.buscarOperadoras)
router.post('/rsd/pedido/criar/individual', auth, rsdController.criarPedidoIndividual)
router.post('/rsd/operadoras/criar', auth, rsdController.criarOperadora)
router.put('/rsd/operadoras/editar', auth, rsdController.editarOperadora)
router.get('/rsd/operadora/:id', auth, rsdController.buscarOperadora)
router.get('/rsd/concluidos/:pesquisa', auth, rsdController.buscarPedidosFinalizados)
router.put('/rsd/pedido/devolverAmil', auth, rsdController.devolverAmil)
router.post('/rsd/agenda/novoParecer', auth, rsdController.escrevarAgenda)
router.post('/rsd/pedidosAntigos', auth, rsdController.subirPedidosAntigos)
router.put('/rsd/pacote/voltarFase', auth, rsdController.voltarFase)
router.put('/rsd/pedido/voltarFase', auth, rsdController.voltarFasePedido)
router.put('/rsd/pedido/prioridadeDossie', auth, rsdController.adicionarPrioridadeDossie)
router.put('/rsd/pacote/devolver', auth, rsdController.devolverPacote)
router.put('/rsd/protocolo/devolver', auth, rsdController.devolverProtocolo)
router.get('/rsd/relatorio/:aPartir/:ate', auth, rsdController.relatorioAmil)
router.get('/rsd/download/:idPacote/:filename', rsdController.download)
router.get('/rsd/producaoDiaria/:data', auth, rsdController.producaoDiaria)


//Rotas Elegibilidade

router.post('/elegibilidade/upload', auth, elegibilidadeController.upload)
router.get('/elegibilidade/propostas/analiseDoc', auth, elegibilidadeController.mostrarAnaliseDoc)
router.put('/elegibilidade/atribuir/preProcessamento', auth, elegibilidadeController.atribuirAnalistaPre)
router.get('/elegibilidade/infoProposta/:id', auth, elegibilidadeController.mostrarInfoPropostaId)
router.get('/elegibilidade/propostas/analise/:analista', auth, elegibilidadeController.mostrarAnalise)
router.get('/elegibilidade/proposta/teste', auth, elegibilidadeController.filtroAnalise)
router.get('/elegibilidade/entidades/andamento', auth, elegibilidadeController.entidades)
router.put('/elegibilidade/atribuir/analise', auth, elegibilidadeController.atribuirAnalista)
router.get('/elegibilidade/propostas/analise/proposta/:proposta', auth, elegibilidadeController.fitroPropostaAnalise)
router.put('/elegibilidade/proposta/alterarStatus', auth, elegibilidadeController.statusEmAndamento)
router.put('/elegibilidade/proposta/fase1', auth, elegibilidadeController.fase1)
router.get('/elegibilidade/agenda/:proposta', auth, elegibilidadeController.buscarAgenda)
router.delete('/elegibilidade/agenda/:id', auth, elegibilidadeController.excluirComentario)
router.get('/elegibilidade/prc', auth, elegibilidadeController.buscarPrc)
router.put('/elegibilidade/enviarUnder', auth, elegibilidadeController.enviarUnder)
router.put('/elegibilidade/enviarFaseCancelamento', auth, elegibilidadeController.enviarFaseCancelamento)
router.put('/elegibilidade/devolver', auth, elegibilidadeController.devolver)


/* Urgencia Emergencia */

router.post('/urgenciaEmergencia/upload', auth, urgenciaEmergenciaController.upload)
router.get('/urgenciaEmergencia/andamento', auth, urgenciaEmergenciaController.mostrarAndamento)
router.get('/urgenciaEmergencia/concluidas', auth, urgenciaEmergenciaController.mostrarConcluidas)
router.get('/urgenciaEmergencia/anexar', auth, urgenciaEmergenciaController.mostrarAnexar)
router.get('/urgenciaEmergencia/todas', auth, urgenciaEmergenciaController.mostrarTodas)
router.get('/urgenciaEmergencia/detalhes/:id', auth, urgenciaEmergenciaController.mostrarDadosProposta)
router.put('/urgenciaEmergencia/salvarInfo', auth, urgenciaEmergenciaController.salvarInfo)
router.put('/urgenciaEmergencia/concluir', auth, urgenciaEmergenciaController.concluir)
router.get('/urgenciaEmergencia/producao/:data', auth, urgenciaEmergenciaController.producao)
router.put('/urgenciaEmergencia/salvarContato', auth, urgenciaEmergenciaController.salvarContato)
router.put('/urgenciaEmergencia/concluirAnexo', auth, urgenciaEmergenciaController.concluirAnexo)
router.get('/urgenciaEmergencia/producaoTotal', auth, urgenciaEmergenciaController.producaoTotal)


/* Controle de Atividades */

router.post('/controleAtividade/iniciarPadrao', auth, ControleAtividadeController.atividadePadrao)
router.get('/controleAtividade/andamento', auth, ControleAtividadeController.atividadesAndamento)
router.get('/controleAtividade/atual', auth, ControleAtividadeController.atividadeAtual)
router.put('/controleAtividade/assumir', auth, ControleAtividadeController.assumirAtividade)
router.put('/controleAtividade/encerrar', auth, ControleAtividadeController.encerrarAtividade)
router.get('/controleAtividade/report', auth, ControleAtividadeController.report)

/* Amil */

router.post('/amil/upload', auth, amilController.upload)
router.get('/amil/AGD', auth, amilController.agd)
router.get('/amil/removeAll', auth, amilController.removeAll)

module.exports = router